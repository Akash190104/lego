---
kind: pipeline
type: docker
name: default

trigger:
  event:
    exclude:
      - pull_request

steps:
  - name: setup
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    commands:
      - make ci_settings

  - name: missing-migrations
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
      DATABASE: database
      CACHE: cache
    depends_on:
      - setup
    commands:
      - tox -e missing-migrations

  - name: tests
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
      DATABASE: database
      CACHE: cache
    depends_on:
      - setup
    commands:
      - tox -e tests

  - name: isort
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e isort

  - name: flake8
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e flake8

  - name: black
    image: abakus/lego-testbase:python3.7
    pull: true
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e black

  - name: docs
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e docs

  - name: coverage
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - tests
    commands:
      - tox -e coverage

  - name: docker
    image: plugins/docker
    when:
      branch:
        - prod
      status: success
      event: push
    depends_on:
      - missing-migrations
      - tests
      - isort
      - flake8
      - black
      - docs
      - coverage
    settings:
      registry: https://registry.webkom.dev
      repo: registry.webkom.dev/webkom/lego
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - ${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}
        - latest
      build_args:
        - RELEASE=${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}

  - name: clone_infrastructure
    image: alpine/git
    volumes:
      - name: infrastructure
        path: /infrastructure
    environment:
      INFRA_SSH_KEY:
        from_secret: infra_deploy_key
    commands:
      # These commands configure our authentication against
      # github so we can clone our infra repo
      - mkdir -p /root/.ssh
      - echo -n "$INFRA_SSH_KEY" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa
      - touch /root/.ssh/known_hosts
      - chmod 600 /root/.ssh/known_hosts
      - ssh-keyscan -t rsa -H github.com > /etc/ssh/ssh_known_hosts 2> /dev/null
      - git clone git@github.com:webkom/infrastructure.git /infrastructure
    when:
      event:
        - promote
        - rollback
      branch:
        - prod


  - name: Deploy
    image: plugins/ansible
    environment:
      SLACK_USER: drone
    volumes:
      - name: infrastructure
        path: /infrastructure
    settings:
      playbook: /infrastructure/lego/playbooks/deploy.yml
      tags:
        - lego
      limit: ${DRONE_DEPLOY_TO}
      extra_vars: lego_version=${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}
      inventory: /infrastructure/inventory
      vault_password:
        from_secret: ansible_vault_password
      private_key:
        from_secret: infra_deploy_key
    when:
      event:
        - promote
        - rollback
      branch:
        - prod
    depends_on:
      - clone_infrastructure

volumes:
  - name: infrastructure
    temp: {}

services:
  - name: database
    image: postgres:9.5
    environment:
      POSTGRES_USER: lego
      POSTGRES_HOST_AUTH_METHOD: trust
  - name: cache
    image: redis

---
kind: signature
hmac: 2f3fde00d2d5cae00024ebaaea18aa402c81b62f6c21b5d9a369d242d14d9ee9
