---
kind: pipeline
type: docker
name: default

steps:
  - name: setup
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    commands:
      - make ci_settings

  - name: missing-migrations
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
      DATABASE: database
      CACHE: cache
    depends_on:
      - setup
    commands:
      - tox -e missing-migrations

  - name: tests
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
      DATABASE: database
      CACHE: cache
    depends_on:
      - setup
    commands:
      - tox -e tests

  - name: isort
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e isort

  - name: flake8
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e flake8

  - name: black
    image: abakus/lego-testbase:python3.7
    pull: true
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e black

  - name: docs
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - setup
    commands:
      - tox -e docs

  - name: coverage
    image: abakus/lego-testbase:python3.7
    when:
      event: push
    environment:
      LANG: C.UTF-8
    depends_on:
      - tests
    commands:
      - tox -e coverage

  - name: docker
    image: plugins/docker
    when:
      branch:
        - prod
      status: success
      event: push
    depends_on:
      - missing-migrations
      - tests
      - isort
      - flake8
      - black
      - docs
      - coverage
    settings:
      registry: https://registry.abakus.no
      repo: registry.abakus.no/webkom/lego
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tags:
        - ${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}
        - latest
      build_args:
        - RELEASE=${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:7}

services:
  - name: database
    image: postgres:9.5
    environment:
      POSTGRES_USER: lego
      POSTGRES_HOST_AUTH_METHOD: trust
  - name: cache
    image: redis
